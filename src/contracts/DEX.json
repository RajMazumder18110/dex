{
  "contractName": "DEX",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ethValue",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "dexValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "toDex",
          "type": "bool"
        }
      ],
      "name": "TokenSwapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "dexTokenExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "exchangeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newRate",
          "type": "uint256"
        }
      ],
      "name": "updateDexTokenExchangeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newFee",
          "type": "uint256"
        }
      ],
      "name": "updateExchangeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dexTokenContractAddress",
          "type": "address"
        }
      ],
      "name": "swapETHWithDEXToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dexTokenContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "swapDEXTokenWithETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ethValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dexValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"toDex\",\"type\":\"bool\"}],\"name\":\"TokenSwapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dexTokenExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dexTokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"swapDEXTokenWithETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dexTokenContractAddress\",\"type\":\"address\"}],\"name\":\"swapETHWithDEXToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRate\",\"type\":\"uint256\"}],\"name\":\"updateDexTokenExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"updateExchangeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokenSwapped(address,uint256,uint256,bool)\":{\"details\":\"Event to keep track of swapped values.\",\"params\":{\"dexValue\":\": The DEX token value.\",\"ethValue\":\": The ethereum value.\",\"toDex\":\": Boolean value to check whether address swapped eth with dex\",\"walletAddress\":\": The address who swapped.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Assigning the contract deployer to owner.\"},\"swapDEXTokenWithETH(address,uint256)\":{\"details\":\"function to swap DEX with ETH.\",\"params\":{\"_dexTokenContractAddress\":\": The address of the DEXToken contract.\",\"_tokenAmount\":\": The DEX token amount want to sell.\"}},\"swapETHWithDEXToken(address)\":{\"details\":\"function to swap ether with DEX Token.\",\"params\":{\"_dexTokenContractAddress\":\": The address of the DEXToken contract.\"}},\"updateDexTokenExchangeRate(uint256)\":{\"details\":\"Function to update DEXToken exchange rate.\",\"params\":{\"_newRate\":\": The new exchange rate of DEXToken.\"}},\"updateExchangeFee(uint256)\":{\"details\":\"Function to update exchange fee.\",\"params\":{\"_newFee\":\": The new exchange fee.\"}},\"withdrawFees()\":{\"details\":\"Function to withdraw fees which only accessable from owner account.\"}},\"stateVariables\":{\"dexTokenExchangeRate\":{\"details\":\"Tracking DEXToken exchange rate per ethereum.\"},\"exchangeFee\":{\"details\":\"Tracking exchange fee and total fee collected.\"},\"owner\":{\"details\":\"keep track of the owner who deployed the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DEX.sol\":\"DEX\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/contracts/DEX.sol\":{\"keccak256\":\"0x571ce79bc506a72f8ac35243078d0f8e7a78cc05301bb156d9e302a9716981db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a66b8449fcf923092640cfd6eccb8ad25486fa4d4a1bee47ac68643770bfaf96\",\"dweb:/ipfs/QmTMQjjZRxha22TMbdZtM2uURgbyVBtneV8abuFWCv9SAF\"]}},\"version\":1}",
  "bytecode": "0x60a060405261271060015565b5e620f4800060025534801561002057600080fd5b5060016000819055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516112256100946000396000818161020b015281816105c10152818161064f015281816109b301526109d701526112256000f3fe608060405260043610610098576000357c010000000000000000000000000000000000000000000000000000000090048063476343ee1161006b578063476343ee146101385780638abbd3a91461014f5780638da5cb5b1461016b5780639b9cf7de1461019657610098565b80632ecd3be41461009d578063350d91fd146100c8578063367fd448146100f15780633e6f03f81461011c575b600080fd5b3480156100a957600080fd5b506100b26101bf565b6040516100bf9190610a86565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610ad2565b6101c5565b005b3480156100fd57600080fd5b506101066102a2565b6040516101139190610a86565b60405180910390f35b61013660048036038101906101319190610b5d565b6102a8565b005b34801561014457600080fd5b5061014d610579565b005b61016960048036038101906101649190610b8a565b6106c1565b005b34801561017757600080fd5b506101806109b1565b60405161018d9190610bd9565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190610ad2565b6109d5565b005b60025481565b8060008111610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020090610c77565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028e90610d09565b60405180910390fd5b816001819055505050565b60015481565b8060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103009190610bd9565b602060405180830381865afa15801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190610d3e565b90506000600154600254346103569190610d9a565b6103609190610dce565b9050808210156103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90610e9a565b60405180910390fd5b6002543410156103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e190610f2c565b60405180910390fd5b60026000540361042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690610f98565b60405180910390fd5b600260008190555060006001546002543461044a9190610d9a565b6104549190610dce565b90506002546003600082825461046a9190610fb8565b925050819055508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104c892919061100e565b6020604051808303816000875af11580156104e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050b919061106f565b50806002543461051b9190610d9a565b3373ffffffffffffffffffffffffffffffffffffffff167f998db19d1e1862382f8a2644e3c399121b4ec6dcae1a42dd4034c30fca3fe32b600160405161056291906110ab565b60405180910390a450600160008190555050505050565b600354600081116105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b690610c77565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490610d09565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156106b5573d6000803e3d6000fd5b50600060038190555050565b818160008273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161071a9190610bd9565b602060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610d3e565b9050808211156107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079790611138565b60405180910390fd5b6002543410156107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90610f2c565b60405180910390fd5b60026000540361082a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082190610f98565b60405180910390fd5b60026000819055506000600254600154866108459190611187565b61084f9190610d9a565b9050600254600360008282546108659190610fb8565b925050819055508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016108c5939291906111b8565b6020604051808303816000875af11580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610908919061106f565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561094f573d6000803e3d6000fd5b5084813373ffffffffffffffffffffffffffffffffffffffff167f998db19d1e1862382f8a2644e3c399121b4ec6dcae1a42dd4034c30fca3fe32b600060405161099991906110ab565b60405180910390a45060016000819055505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a90610d09565b60405180910390fd5b8060028190555050565b6000819050919050565b610a8081610a6d565b82525050565b6000602082019050610a9b6000830184610a77565b92915050565b600080fd5b610aaf81610a6d565b8114610aba57600080fd5b50565b600081359050610acc81610aa6565b92915050565b600060208284031215610ae857610ae7610aa1565b5b6000610af684828501610abd565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2a82610aff565b9050919050565b610b3a81610b1f565b8114610b4557600080fd5b50565b600081359050610b5781610b31565b92915050565b600060208284031215610b7357610b72610aa1565b5b6000610b8184828501610b48565b91505092915050565b60008060408385031215610ba157610ba0610aa1565b5b6000610baf85828601610b48565b9250506020610bc085828601610abd565b9150509250929050565b610bd381610b1f565b82525050565b6000602082019050610bee6000830184610bca565b92915050565b600082825260208201905092915050565b7f56616c75654d6f72655468616e5a65726f3a2056616c75652073686f756c642060008201527f6e6f74206265207a65726f000000000000000000000000000000000000000000602082015250565b6000610c61602b83610bf4565b9150610c6c82610c05565b604082019050919050565b60006020820190508181036000830152610c9081610c54565b9050919050565b7f4f6e6c794f776e65723a204f6e6c79206f776e65722063616e2061636365737360008201527f20746869732066756e6374696f6e2e0000000000000000000000000000000000602082015250565b6000610cf3602f83610bf4565b9150610cfe82610c97565b604082019050919050565b60006020820190508181036000830152610d2281610ce6565b9050919050565b600081519050610d3881610aa6565b92915050565b600060208284031215610d5457610d53610aa1565b5b6000610d6284828501610d29565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610da582610a6d565b9150610db083610a6d565b925082821015610dc357610dc2610d6b565b5b828203905092915050565b6000610dd982610a6d565b9150610de483610a6d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1d57610e1c610d6b565b5b828202905092915050565b7f444558546f6b656e417661696c61626c65496e436f6e74726163743a2044455860008201527f20746f6b656e206973206e6f7420617661696c61626c652e0000000000000000602082015250565b6000610e84603883610bf4565b9150610e8f82610e28565b604082019050919050565b60006020820190508181036000830152610eb381610e77565b9050919050565b7f45786368616e676546656553656e743a2045786368616e67652066656520697360008201527f206e6f742073656e742e00000000000000000000000000000000000000000000602082015250565b6000610f16602a83610bf4565b9150610f2182610eba565b604082019050919050565b60006020820190508181036000830152610f4581610f09565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610f82601f83610bf4565b9150610f8d82610f4c565b602082019050919050565b60006020820190508181036000830152610fb181610f75565b9050919050565b6000610fc382610a6d565b9150610fce83610a6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561100357611002610d6b565b5b828201905092915050565b60006040820190506110236000830185610bca565b6110306020830184610a77565b9392505050565b60008115159050919050565b61104c81611037565b811461105757600080fd5b50565b60008151905061106981611043565b92915050565b60006020828403121561108557611084610aa1565b5b60006110938482850161105a565b91505092915050565b6110a581611037565b82525050565b60006020820190506110c0600083018461109c565b92915050565b7f444558546f6b656e417661696c61626c65496e53656e6465723a20444558207460008201527f6f6b656e206973206e6f7420617661696c61626c652e00000000000000000000602082015250565b6000611122603683610bf4565b915061112d826110c6565b604082019050919050565b6000602082019050818103600083015261115181611115565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061119282610a6d565b915061119d83610a6d565b9250826111ad576111ac611158565b5b828204905092915050565b60006060820190506111cd6000830186610bca565b6111da6020830185610bca565b6111e76040830184610a77565b94935050505056fea26469706673582212201689713e3addaf36077b96291dcc916e3676036f42e1ae61689a36e7a20f287d64736f6c634300080f0033",
  "deployedBytecode": "0x608060405260043610610098576000357c010000000000000000000000000000000000000000000000000000000090048063476343ee1161006b578063476343ee146101385780638abbd3a91461014f5780638da5cb5b1461016b5780639b9cf7de1461019657610098565b80632ecd3be41461009d578063350d91fd146100c8578063367fd448146100f15780633e6f03f81461011c575b600080fd5b3480156100a957600080fd5b506100b26101bf565b6040516100bf9190610a86565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610ad2565b6101c5565b005b3480156100fd57600080fd5b506101066102a2565b6040516101139190610a86565b60405180910390f35b61013660048036038101906101319190610b5d565b6102a8565b005b34801561014457600080fd5b5061014d610579565b005b61016960048036038101906101649190610b8a565b6106c1565b005b34801561017757600080fd5b506101806109b1565b60405161018d9190610bd9565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190610ad2565b6109d5565b005b60025481565b8060008111610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020090610c77565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028e90610d09565b60405180910390fd5b816001819055505050565b60015481565b8060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103009190610bd9565b602060405180830381865afa15801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190610d3e565b90506000600154600254346103569190610d9a565b6103609190610dce565b9050808210156103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90610e9a565b60405180910390fd5b6002543410156103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e190610f2c565b60405180910390fd5b60026000540361042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690610f98565b60405180910390fd5b600260008190555060006001546002543461044a9190610d9a565b6104549190610dce565b90506002546003600082825461046a9190610fb8565b925050819055508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104c892919061100e565b6020604051808303816000875af11580156104e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050b919061106f565b50806002543461051b9190610d9a565b3373ffffffffffffffffffffffffffffffffffffffff167f998db19d1e1862382f8a2644e3c399121b4ec6dcae1a42dd4034c30fca3fe32b600160405161056291906110ab565b60405180910390a450600160008190555050505050565b600354600081116105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b690610c77565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490610d09565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156106b5573d6000803e3d6000fd5b50600060038190555050565b818160008273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161071a9190610bd9565b602060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610d3e565b9050808211156107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079790611138565b60405180910390fd5b6002543410156107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc90610f2c565b60405180910390fd5b60026000540361082a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082190610f98565b60405180910390fd5b60026000819055506000600254600154866108459190611187565b61084f9190610d9a565b9050600254600360008282546108659190610fb8565b925050819055508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016108c5939291906111b8565b6020604051808303816000875af11580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610908919061106f565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561094f573d6000803e3d6000fd5b5084813373ffffffffffffffffffffffffffffffffffffffff167f998db19d1e1862382f8a2644e3c399121b4ec6dcae1a42dd4034c30fca3fe32b600060405161099991906110ab565b60405180910390a45060016000819055505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a90610d09565b60405180910390fd5b8060028190555050565b6000819050919050565b610a8081610a6d565b82525050565b6000602082019050610a9b6000830184610a77565b92915050565b600080fd5b610aaf81610a6d565b8114610aba57600080fd5b50565b600081359050610acc81610aa6565b92915050565b600060208284031215610ae857610ae7610aa1565b5b6000610af684828501610abd565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2a82610aff565b9050919050565b610b3a81610b1f565b8114610b4557600080fd5b50565b600081359050610b5781610b31565b92915050565b600060208284031215610b7357610b72610aa1565b5b6000610b8184828501610b48565b91505092915050565b60008060408385031215610ba157610ba0610aa1565b5b6000610baf85828601610b48565b9250506020610bc085828601610abd565b9150509250929050565b610bd381610b1f565b82525050565b6000602082019050610bee6000830184610bca565b92915050565b600082825260208201905092915050565b7f56616c75654d6f72655468616e5a65726f3a2056616c75652073686f756c642060008201527f6e6f74206265207a65726f000000000000000000000000000000000000000000602082015250565b6000610c61602b83610bf4565b9150610c6c82610c05565b604082019050919050565b60006020820190508181036000830152610c9081610c54565b9050919050565b7f4f6e6c794f776e65723a204f6e6c79206f776e65722063616e2061636365737360008201527f20746869732066756e6374696f6e2e0000000000000000000000000000000000602082015250565b6000610cf3602f83610bf4565b9150610cfe82610c97565b604082019050919050565b60006020820190508181036000830152610d2281610ce6565b9050919050565b600081519050610d3881610aa6565b92915050565b600060208284031215610d5457610d53610aa1565b5b6000610d6284828501610d29565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610da582610a6d565b9150610db083610a6d565b925082821015610dc357610dc2610d6b565b5b828203905092915050565b6000610dd982610a6d565b9150610de483610a6d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1d57610e1c610d6b565b5b828202905092915050565b7f444558546f6b656e417661696c61626c65496e436f6e74726163743a2044455860008201527f20746f6b656e206973206e6f7420617661696c61626c652e0000000000000000602082015250565b6000610e84603883610bf4565b9150610e8f82610e28565b604082019050919050565b60006020820190508181036000830152610eb381610e77565b9050919050565b7f45786368616e676546656553656e743a2045786368616e67652066656520697360008201527f206e6f742073656e742e00000000000000000000000000000000000000000000602082015250565b6000610f16602a83610bf4565b9150610f2182610eba565b604082019050919050565b60006020820190508181036000830152610f4581610f09565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610f82601f83610bf4565b9150610f8d82610f4c565b602082019050919050565b60006020820190508181036000830152610fb181610f75565b9050919050565b6000610fc382610a6d565b9150610fce83610a6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561100357611002610d6b565b5b828201905092915050565b60006040820190506110236000830185610bca565b6110306020830184610a77565b9392505050565b60008115159050919050565b61104c81611037565b811461105757600080fd5b50565b60008151905061106981611043565b92915050565b60006020828403121561108557611084610aa1565b5b60006110938482850161105a565b91505092915050565b6110a581611037565b82525050565b60006020820190506110c0600083018461109c565b92915050565b7f444558546f6b656e417661696c61626c65496e53656e6465723a20444558207460008201527f6f6b656e206973206e6f7420617661696c61626c652e00000000000000000000602082015250565b6000611122603683610bf4565b915061112d826110c6565b604082019050919050565b6000602082019050818103600083015261115181611115565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061119282610a6d565b915061119d83610a6d565b9250826111ad576111ac611158565b5b828204905092915050565b60006060820190506111cd6000830186610bca565b6111da6020830185610bca565b6111e76040830184610a77565b94935050505056fea26469706673582212201689713e3addaf36077b96291dcc916e3676036f42e1ae61689a36e7a20f287d64736f6c634300080f0033",
  "immutableReferences": {
    "136": [
      {
        "length": 32,
        "start": 523
      },
      {
        "length": 32,
        "start": 1473
      },
      {
        "length": 32,
        "start": 1615
      },
      {
        "length": 32,
        "start": 2483
      },
      {
        "length": 32,
        "start": 2519
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13159:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:3",
                "type": ""
              }
            ],
            "src": "7:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:3",
                "type": ""
              }
            ],
            "src": "90:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:3",
                "type": ""
              }
            ],
            "src": "214:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:3",
                "type": ""
              }
            ],
            "src": "442:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:3",
                "type": ""
              }
            ],
            "src": "769:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:3",
                "type": ""
              }
            ],
            "src": "897:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:3",
                "type": ""
              }
            ],
            "src": "1042:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1447:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1432:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1404:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1414:7:3",
                "type": ""
              }
            ],
            "src": "1377:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1554:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1564:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1593:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1575:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1564:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1536:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1546:7:3",
                "type": ""
              }
            ],
            "src": "1509:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1654:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1711:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1720:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1723:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1713:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1713:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1713:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1677:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1702:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1684:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1684:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1674:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1674:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1664:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1647:5:3",
                "type": ""
              }
            ],
            "src": "1611:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1791:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1801:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1823:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1810:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1810:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1801:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1866:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1839:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1839:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1769:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1777:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1785:5:3",
                "type": ""
              }
            ],
            "src": "1739:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1950:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1996:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1998:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1998:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1998:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1971:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1980:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1967:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1992:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1963:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1960:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2089:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2104:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2108:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2133:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2168:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2179:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2164:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2164:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2188:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2143:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2143:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2133:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1920:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1931:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1943:6:3",
                "type": ""
              }
            ],
            "src": "1884:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2302:391:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2348:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2350:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2350:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2350:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2323:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2319:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2319:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2344:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2315:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2312:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2441:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2456:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2460:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2485:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2520:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2531:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2516:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2540:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2495:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2495:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2485:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2568:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2583:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2597:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2587:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2613:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2648:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2659:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2644:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2644:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2668:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2623:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2613:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2264:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2275:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2287:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2295:6:3",
                "type": ""
              }
            ],
            "src": "2219:474:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2764:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2781:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2804:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2786:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2786:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2774:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2774:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2774:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2752:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2759:3:3",
                "type": ""
              }
            ],
            "src": "2699:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2921:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2931:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2943:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2954:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2939:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2939:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2931:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3011:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3024:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3035:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3020:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3020:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2967:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2967:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2967:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2893:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2905:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2916:4:3",
                "type": ""
              }
            ],
            "src": "2823:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3147:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3164:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3169:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3157:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3157:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3157:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3185:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3204:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3209:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3200:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3200:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3185:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3119:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3124:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3135:11:3",
                "type": ""
              }
            ],
            "src": "3051:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3332:124:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3354:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3362:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3350:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3350:14:3"
                      },
                      {
                        "hexValue": "56616c75654d6f72655468616e5a65726f3a2056616c75652073686f756c6420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3366:34:3",
                        "type": "",
                        "value": "ValueMoreThanZero: Value should "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3343:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3343:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3422:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3430:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3418:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3418:15:3"
                      },
                      {
                        "hexValue": "6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3435:13:3",
                        "type": "",
                        "value": "not be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3411:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3411:38:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3411:38:3"
                }
              ]
            },
            "name": "store_literal_in_memory_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3324:6:3",
                "type": ""
              }
            ],
            "src": "3226:230:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3608:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3618:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3684:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3689:2:3",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3625:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3625:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3618:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3790:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41",
                      "nodeType": "YulIdentifier",
                      "src": "3701:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3701:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3701:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3803:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3814:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3819:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3810:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3810:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3803:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3596:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3604:3:3",
                "type": ""
              }
            ],
            "src": "3462:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4005:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4015:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4027:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4038:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4023:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4023:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4015:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4062:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4073:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4058:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4058:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4081:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4087:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4077:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4077:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4051:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4051:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4051:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4107:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4241:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4115:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4115:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4107:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3985:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4000:4:3",
                "type": ""
              }
            ],
            "src": "3834:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4365:128:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4387:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4395:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4383:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4383:14:3"
                      },
                      {
                        "hexValue": "4f6e6c794f776e65723a204f6e6c79206f776e65722063616e20616363657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4399:34:3",
                        "type": "",
                        "value": "OnlyOwner: Only owner can access"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4376:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4376:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4376:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4455:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4463:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4451:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4451:15:3"
                      },
                      {
                        "hexValue": "20746869732066756e6374696f6e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4468:17:3",
                        "type": "",
                        "value": " this function."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4444:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4444:42:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4444:42:3"
                }
              ]
            },
            "name": "store_literal_in_memory_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4357:6:3",
                "type": ""
              }
            ],
            "src": "4259:234:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4645:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4655:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4721:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4726:2:3",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4662:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4662:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4655:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4827:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8",
                      "nodeType": "YulIdentifier",
                      "src": "4738:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4738:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4738:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4840:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4851:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4856:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4847:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4847:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4840:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4633:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4641:3:3",
                "type": ""
              }
            ],
            "src": "4499:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5042:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5052:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5064:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5075:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5060:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5060:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5052:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5099:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5110:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5095:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5095:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5118:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5124:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5114:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5114:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5088:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5088:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5088:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5144:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5278:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5152:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5152:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5144:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5022:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5037:4:3",
                "type": ""
              }
            ],
            "src": "4871:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5359:80:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5369:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5384:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5378:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5378:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5369:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5427:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5400:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5400:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5400:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5337:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5345:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5353:5:3",
                "type": ""
              }
            ],
            "src": "5296:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5522:274:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5568:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5570:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5570:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5570:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5543:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5552:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5539:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5539:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5564:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5535:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5535:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5532:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5661:128:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5676:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5690:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5680:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5705:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5751:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5762:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5747:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5747:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5771:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5715:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5715:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5705:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5492:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5503:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5515:6:3",
                "type": ""
              }
            ],
            "src": "5445:351:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5830:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5847:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5850:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5840:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5840:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5840:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5944:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5947:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5937:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5937:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5937:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5968:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5971:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5961:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5961:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5961:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5802:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6033:146:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6043:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6066:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6048:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6048:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6043:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6077:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6100:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6082:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6082:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6077:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6124:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6126:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6126:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6126:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6118:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6121:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6115:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6115:8:3"
                  },
                  "nodeType": "YulIf",
                  "src": "6112:34:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6156:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6168:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6171:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6164:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6164:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6156:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6019:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6022:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6028:4:3",
                "type": ""
              }
            ],
            "src": "5988:191:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6233:300:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6243:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6266:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6248:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6248:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6243:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6277:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6300:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6282:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6282:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6277:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6475:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6477:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6477:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6477:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6387:1:3"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6380:6:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6380:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6373:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6373:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6395:1:3"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6402:66:3",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6470:1:3"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6398:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6398:74:3"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6392:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6392:81:3"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6369:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6369:105:3"
                  },
                  "nodeType": "YulIf",
                  "src": "6366:131:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6507:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6522:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6525:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6518:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6518:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6507:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6216:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6219:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6225:7:3",
                "type": ""
              }
            ],
            "src": "6185:348:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6645:137:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6667:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6675:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6663:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6663:14:3"
                      },
                      {
                        "hexValue": "444558546f6b656e417661696c61626c65496e436f6e74726163743a20444558",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6679:34:3",
                        "type": "",
                        "value": "DEXTokenAvailableInContract: DEX"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6656:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6656:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6656:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6735:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6743:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6731:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6731:15:3"
                      },
                      {
                        "hexValue": "20746f6b656e206973206e6f7420617661696c61626c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6748:26:3",
                        "type": "",
                        "value": " token is not available."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6724:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6724:51:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6724:51:3"
                }
              ]
            },
            "name": "store_literal_in_memory_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6637:6:3",
                "type": ""
              }
            ],
            "src": "6539:243:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6934:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6944:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7010:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7015:2:3",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6951:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6951:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6944:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7116:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c",
                      "nodeType": "YulIdentifier",
                      "src": "7027:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7027:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7027:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7129:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7140:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7145:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7136:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7136:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7129:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6922:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6930:3:3",
                "type": ""
              }
            ],
            "src": "6788:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7331:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7341:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7353:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7364:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7349:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7349:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7341:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7388:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7399:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7384:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7384:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7407:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7413:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7403:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7403:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7377:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7377:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7377:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7433:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7567:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7441:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7441:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7433:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7311:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7326:4:3",
                "type": ""
              }
            ],
            "src": "7160:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7691:123:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7713:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7721:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7709:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7709:14:3"
                      },
                      {
                        "hexValue": "45786368616e676546656553656e743a2045786368616e676520666565206973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7725:34:3",
                        "type": "",
                        "value": "ExchangeFeeSent: Exchange fee is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7702:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7702:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7702:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7781:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7789:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7777:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7777:15:3"
                      },
                      {
                        "hexValue": "206e6f742073656e742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7794:12:3",
                        "type": "",
                        "value": " not sent."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7770:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7770:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7770:37:3"
                }
              ]
            },
            "name": "store_literal_in_memory_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7683:6:3",
                "type": ""
              }
            ],
            "src": "7585:229:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7966:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7976:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8042:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8047:2:3",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7983:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7983:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7976:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8148:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb",
                      "nodeType": "YulIdentifier",
                      "src": "8059:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8059:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8059:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8161:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8172:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8177:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8168:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8168:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8161:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7954:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7962:3:3",
                "type": ""
              }
            ],
            "src": "7820:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8363:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8373:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8385:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8396:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8381:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8381:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8373:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8420:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8431:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8416:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8416:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8439:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8445:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8435:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8435:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8409:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8409:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8409:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8465:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8599:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8473:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8473:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8465:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8343:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8358:4:3",
                "type": ""
              }
            ],
            "src": "8192:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8723:75:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8745:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8753:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8741:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8741:14:3"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8757:33:3",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8734:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8734:57:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8734:57:3"
                }
              ]
            },
            "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8715:6:3",
                "type": ""
              }
            ],
            "src": "8617:181:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8950:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8960:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9026:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9031:2:3",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8967:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8967:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8960:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9132:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                      "nodeType": "YulIdentifier",
                      "src": "9043:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9043:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9043:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9145:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9156:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9161:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9152:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9152:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9145:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8938:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8946:3:3",
                "type": ""
              }
            ],
            "src": "8804:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9347:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9357:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9369:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9380:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9365:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9365:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9357:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9404:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9415:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9400:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9400:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9423:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9429:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9419:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9419:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9393:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9393:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9393:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9449:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9583:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9457:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9457:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9449:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9327:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9342:4:3",
                "type": ""
              }
            ],
            "src": "9176:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9645:261:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9655:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9678:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9660:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9660:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9655:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9689:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9712:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9694:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9694:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9689:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9852:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9854:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9854:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9854:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9773:1:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9780:66:3",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9848:1:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9776:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9776:74:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9770:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9770:81:3"
                  },
                  "nodeType": "YulIf",
                  "src": "9767:107:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9884:16:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9895:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9898:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9891:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9891:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9884:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9632:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9635:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9641:3:3",
                "type": ""
              }
            ],
            "src": "9601:305:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10038:206:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10048:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10060:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10071:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10056:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10056:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10048:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10128:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10141:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10152:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10137:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10137:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10084:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10084:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10084:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10209:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10222:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10233:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10218:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10218:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10165:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10165:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10165:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10002:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10014:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10022:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10033:4:3",
                "type": ""
              }
            ],
            "src": "9912:332:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10292:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10302:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10327:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10320:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10320:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10313:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10313:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10302:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10274:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10284:7:3",
                "type": ""
              }
            ],
            "src": "10250:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10386:76:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10440:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10449:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10452:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10442:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10442:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10442:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10409:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10431:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10416:14:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10416:21:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10406:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10406:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10399:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10399:40:3"
                  },
                  "nodeType": "YulIf",
                  "src": "10396:60:3"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10379:5:3",
                "type": ""
              }
            ],
            "src": "10346:116:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10528:77:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10538:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10553:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10547:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10547:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10538:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10593:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "10569:23:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10569:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10569:30:3"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10506:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10514:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10522:5:3",
                "type": ""
              }
            ],
            "src": "10468:137:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10685:271:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10731:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10733:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10733:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10733:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10706:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10715:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10702:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10702:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10727:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10698:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10698:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "10695:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10824:125:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10839:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10853:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10843:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10868:71:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10911:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10922:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10907:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10907:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10931:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10878:28:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10878:61:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10868:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10655:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10666:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10678:6:3",
                "type": ""
              }
            ],
            "src": "10611:345:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11021:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11038:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11058:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "11043:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11043:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11031:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11031:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11031:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11009:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11016:3:3",
                "type": ""
              }
            ],
            "src": "10962:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11169:118:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11179:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11191:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11202:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11187:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11187:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11179:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11253:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11266:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11277:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11262:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11262:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11215:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11215:65:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11215:65:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11141:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11153:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11164:4:3",
                "type": ""
              }
            ],
            "src": "11077:210:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11399:135:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11421:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11429:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11417:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11417:14:3"
                      },
                      {
                        "hexValue": "444558546f6b656e417661696c61626c65496e53656e6465723a204445582074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11433:34:3",
                        "type": "",
                        "value": "DEXTokenAvailableInSender: DEX t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11410:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11410:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11410:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11489:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11497:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11485:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11485:15:3"
                      },
                      {
                        "hexValue": "6f6b656e206973206e6f7420617661696c61626c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11502:24:3",
                        "type": "",
                        "value": "oken is not available."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11478:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11478:49:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11478:49:3"
                }
              ]
            },
            "name": "store_literal_in_memory_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11391:6:3",
                "type": ""
              }
            ],
            "src": "11293:241:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11686:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11696:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11762:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11767:2:3",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11703:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11703:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11696:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11868:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d",
                      "nodeType": "YulIdentifier",
                      "src": "11779:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11779:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11779:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11881:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11892:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11897:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11888:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11888:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11881:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11674:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11682:3:3",
                "type": ""
              }
            ],
            "src": "11540:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12083:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12093:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12105:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12116:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12101:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12101:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12093:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12140:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12151:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12136:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12136:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12159:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12165:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12155:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12155:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12129:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12129:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12129:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12185:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12319:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12193:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12193:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12185:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12063:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12078:4:3",
                "type": ""
              }
            ],
            "src": "11912:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12365:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12382:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12385:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12375:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12375:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12375:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12479:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12482:4:3",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12472:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12472:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12472:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12503:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12506:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12496:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12496:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12496:15:3"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "12337:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12565:143:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12575:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12598:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12580:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12580:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12575:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12609:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12632:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12614:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12614:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12609:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12656:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "12658:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12658:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12658:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12653:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12646:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12646:9:3"
                  },
                  "nodeType": "YulIf",
                  "src": "12643:35:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12688:14:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12697:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12700:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "12693:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12693:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "12688:1:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12554:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12557:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "12563:1:3",
                "type": ""
              }
            ],
            "src": "12523:185:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12868:288:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12878:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12890:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12901:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12886:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12886:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12878:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12958:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12971:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12982:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12967:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12967:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12914:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12914:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12914:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13039:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13052:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13063:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13048:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13048:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12995:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12995:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12995:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13121:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13134:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13145:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13130:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13130:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13077:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13077:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13077:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12824:9:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12836:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12844:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12852:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12863:4:3",
                "type": ""
              }
            ],
            "src": "12714:442:3"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41(memPtr) {\n\n        mstore(add(memPtr, 0), \"ValueMoreThanZero: Value should \")\n\n        mstore(add(memPtr, 32), \"not be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"OnlyOwner: Only owner can access\")\n\n        mstore(add(memPtr, 32), \" this function.\")\n\n    }\n\n    function abi_encode_t_stringliteral_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c(memPtr) {\n\n        mstore(add(memPtr, 0), \"DEXTokenAvailableInContract: DEX\")\n\n        mstore(add(memPtr, 32), \" token is not available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ExchangeFeeSent: Exchange fee is\")\n\n        mstore(add(memPtr, 32), \" not sent.\")\n\n    }\n\n    function abi_encode_t_stringliteral_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d(memPtr) {\n\n        mstore(add(memPtr, 0), \"DEXTokenAvailableInSender: DEX t\")\n\n        mstore(add(memPtr, 32), \"oken is not available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "179:4973:2:-:0;;;329:5;291:43;;445:12;416:41;;2970:48;;;;;;;;;;1701:1:0;1806:7;:22;;;;3001:10:2;2993:18;;;;;;;;;;179:4973;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "179:4973:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;416:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3154:157;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;291:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3943:452;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3626:166;;;;;;;;;;;;;:::i;:::-;;4601:549;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;579:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3423:101;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;416:41;;;;:::o;3154:157::-;3243:8;1433:1;1424:6;:10;1416:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;741:5:::1;727:19;;:10;:19;;;719:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3296:8:::2;3273:20;:31;;;;3154:157:::0;;:::o;291:43::-;;;;:::o;3943:452::-;4048:24;1721:23;1754:16;1747:34;;;1790:4;1747:49;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1721:75;;1806:19;1856:20;;1841:11;;1829:9;:23;;;;:::i;:::-;1828:48;;;;:::i;:::-;1806:70;;1913:11;1894:15;:30;;1886:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;1205:11:::1;;1192:9;:24;;1184:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1:0::2;2325:7;;:19:::0;2317:63:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;4121:19:2::3;4171:20;;4156:11;;4144:9;:23;;;;:::i;:::-;4143:48;;;;:::i;:::-;4121:70;;4218:11;;4201:13;;:28;;;;;;;:::i;:::-;;;;;;;;4246:24;4239:41;;;4281:10;4293:11;4239:66;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4370:11;4357;;4345:9;:23;;;;:::i;:::-;4333:10;4320:68;;;4383:4;4320:68;;;;;;:::i;:::-;;;;;;;;4111:284;1701:1:0::2;2628:7;:22;;;;1711:292:2::0;;3943:452;;:::o;3626:166::-;3685:13;;1433:1;1424:6;:10;1416:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;741:5:::1;727:19;;:10;:19;;;719:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3728:5:::2;3720:23;;:38;3744:13;;3720:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;3784:1;3768:13;:17;;;;3626:166:::0;:::o;4601:549::-;4726:24;4752:12;2244:20;2274:16;2267:34;;;2310:10;2267:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2244:78;;2356:12;2340;:28;;2332:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1205:11:::1;;1192:9;:24;;1184:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1:0::2;2325:7;;:19:::0;2317:63:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;4818:17:2::3;4878:11;;4854:20;;4839:12;:35;;;;:::i;:::-;4838:51;;;;:::i;:::-;4818:71;;4916:11;;4899:13;;:28;;;;;;;:::i;:::-;;;;;;;;4944:24;4937:45;;;4983:10;5003:4;5010:12;4937:86;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5041:10;5033:28;;:39;5062:9;5033:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;5123:12;5112:9;5100:10;5087:56;;;5137:5;5087:56;;;;;;:::i;:::-;;;;;;;;4808:342;1701:1:0::2;2628:7;:22;;;;2234:211:2::0;4601:549;;;;:::o;579:30::-;;;:::o;3423:101::-;741:5;727:19;;:10;:19;;;719:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3510:7:::1;3496:11;:21;;;;3423:101:::0;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:474::-;2287:6;2295;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2597:2;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2568:118;2219:474;;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:169::-;3135:11;3169:6;3164:3;3157:19;3209:4;3204:3;3200:14;3185:29;;3051:169;;;;:::o;3226:230::-;3366:34;3362:1;3354:6;3350:14;3343:58;3435:13;3430:2;3422:6;3418:15;3411:38;3226:230;:::o;3462:366::-;3604:3;3625:67;3689:2;3684:3;3625:67;:::i;:::-;3618:74;;3701:93;3790:3;3701:93;:::i;:::-;3819:2;3814:3;3810:12;3803:19;;3462:366;;;:::o;3834:419::-;4000:4;4038:2;4027:9;4023:18;4015:26;;4087:9;4081:4;4077:20;4073:1;4062:9;4058:17;4051:47;4115:131;4241:4;4115:131;:::i;:::-;4107:139;;3834:419;;;:::o;4259:234::-;4399:34;4395:1;4387:6;4383:14;4376:58;4468:17;4463:2;4455:6;4451:15;4444:42;4259:234;:::o;4499:366::-;4641:3;4662:67;4726:2;4721:3;4662:67;:::i;:::-;4655:74;;4738:93;4827:3;4738:93;:::i;:::-;4856:2;4851:3;4847:12;4840:19;;4499:366;;;:::o;4871:419::-;5037:4;5075:2;5064:9;5060:18;5052:26;;5124:9;5118:4;5114:20;5110:1;5099:9;5095:17;5088:47;5152:131;5278:4;5152:131;:::i;:::-;5144:139;;4871:419;;;:::o;5296:143::-;5353:5;5384:6;5378:13;5369:22;;5400:33;5427:5;5400:33;:::i;:::-;5296:143;;;;:::o;5445:351::-;5515:6;5564:2;5552:9;5543:7;5539:23;5535:32;5532:119;;;5570:79;;:::i;:::-;5532:119;5690:1;5715:64;5771:7;5762:6;5751:9;5747:22;5715:64;:::i;:::-;5705:74;;5661:128;5445:351;;;;:::o;5802:180::-;5850:77;5847:1;5840:88;5947:4;5944:1;5937:15;5971:4;5968:1;5961:15;5988:191;6028:4;6048:20;6066:1;6048:20;:::i;:::-;6043:25;;6082:20;6100:1;6082:20;:::i;:::-;6077:25;;6121:1;6118;6115:8;6112:34;;;6126:18;;:::i;:::-;6112:34;6171:1;6168;6164:9;6156:17;;5988:191;;;;:::o;6185:348::-;6225:7;6248:20;6266:1;6248:20;:::i;:::-;6243:25;;6282:20;6300:1;6282:20;:::i;:::-;6277:25;;6470:1;6402:66;6398:74;6395:1;6392:81;6387:1;6380:9;6373:17;6369:105;6366:131;;;6477:18;;:::i;:::-;6366:131;6525:1;6522;6518:9;6507:20;;6185:348;;;;:::o;6539:243::-;6679:34;6675:1;6667:6;6663:14;6656:58;6748:26;6743:2;6735:6;6731:15;6724:51;6539:243;:::o;6788:366::-;6930:3;6951:67;7015:2;7010:3;6951:67;:::i;:::-;6944:74;;7027:93;7116:3;7027:93;:::i;:::-;7145:2;7140:3;7136:12;7129:19;;6788:366;;;:::o;7160:419::-;7326:4;7364:2;7353:9;7349:18;7341:26;;7413:9;7407:4;7403:20;7399:1;7388:9;7384:17;7377:47;7441:131;7567:4;7441:131;:::i;:::-;7433:139;;7160:419;;;:::o;7585:229::-;7725:34;7721:1;7713:6;7709:14;7702:58;7794:12;7789:2;7781:6;7777:15;7770:37;7585:229;:::o;7820:366::-;7962:3;7983:67;8047:2;8042:3;7983:67;:::i;:::-;7976:74;;8059:93;8148:3;8059:93;:::i;:::-;8177:2;8172:3;8168:12;8161:19;;7820:366;;;:::o;8192:419::-;8358:4;8396:2;8385:9;8381:18;8373:26;;8445:9;8439:4;8435:20;8431:1;8420:9;8416:17;8409:47;8473:131;8599:4;8473:131;:::i;:::-;8465:139;;8192:419;;;:::o;8617:181::-;8757:33;8753:1;8745:6;8741:14;8734:57;8617:181;:::o;8804:366::-;8946:3;8967:67;9031:2;9026:3;8967:67;:::i;:::-;8960:74;;9043:93;9132:3;9043:93;:::i;:::-;9161:2;9156:3;9152:12;9145:19;;8804:366;;;:::o;9176:419::-;9342:4;9380:2;9369:9;9365:18;9357:26;;9429:9;9423:4;9419:20;9415:1;9404:9;9400:17;9393:47;9457:131;9583:4;9457:131;:::i;:::-;9449:139;;9176:419;;;:::o;9601:305::-;9641:3;9660:20;9678:1;9660:20;:::i;:::-;9655:25;;9694:20;9712:1;9694:20;:::i;:::-;9689:25;;9848:1;9780:66;9776:74;9773:1;9770:81;9767:107;;;9854:18;;:::i;:::-;9767:107;9898:1;9895;9891:9;9884:16;;9601:305;;;;:::o;9912:332::-;10033:4;10071:2;10060:9;10056:18;10048:26;;10084:71;10152:1;10141:9;10137:17;10128:6;10084:71;:::i;:::-;10165:72;10233:2;10222:9;10218:18;10209:6;10165:72;:::i;:::-;9912:332;;;;;:::o;10250:90::-;10284:7;10327:5;10320:13;10313:21;10302:32;;10250:90;;;:::o;10346:116::-;10416:21;10431:5;10416:21;:::i;:::-;10409:5;10406:32;10396:60;;10452:1;10449;10442:12;10396:60;10346:116;:::o;10468:137::-;10522:5;10553:6;10547:13;10538:22;;10569:30;10593:5;10569:30;:::i;:::-;10468:137;;;;:::o;10611:345::-;10678:6;10727:2;10715:9;10706:7;10702:23;10698:32;10695:119;;;10733:79;;:::i;:::-;10695:119;10853:1;10878:61;10931:7;10922:6;10911:9;10907:22;10878:61;:::i;:::-;10868:71;;10824:125;10611:345;;;;:::o;10962:109::-;11043:21;11058:5;11043:21;:::i;:::-;11038:3;11031:34;10962:109;;:::o;11077:210::-;11164:4;11202:2;11191:9;11187:18;11179:26;;11215:65;11277:1;11266:9;11262:17;11253:6;11215:65;:::i;:::-;11077:210;;;;:::o;11293:241::-;11433:34;11429:1;11421:6;11417:14;11410:58;11502:24;11497:2;11489:6;11485:15;11478:49;11293:241;:::o;11540:366::-;11682:3;11703:67;11767:2;11762:3;11703:67;:::i;:::-;11696:74;;11779:93;11868:3;11779:93;:::i;:::-;11897:2;11892:3;11888:12;11881:19;;11540:366;;;:::o;11912:419::-;12078:4;12116:2;12105:9;12101:18;12093:26;;12165:9;12159:4;12155:20;12151:1;12140:9;12136:17;12129:47;12193:131;12319:4;12193:131;:::i;:::-;12185:139;;11912:419;;;:::o;12337:180::-;12385:77;12382:1;12375:88;12482:4;12479:1;12472:15;12506:4;12503:1;12496:15;12523:185;12563:1;12580:20;12598:1;12580:20;:::i;:::-;12575:25;;12614:20;12632:1;12614:20;:::i;:::-;12609:25;;12653:1;12643:35;;12658:18;;:::i;:::-;12643:35;12700:1;12697;12693:9;12688:14;;12523:185;;;;:::o;12714:442::-;12863:4;12901:2;12890:9;12886:18;12878:26;;12914:71;12982:1;12971:9;12967:17;12958:6;12914:71;:::i;:::-;12995:72;13063:2;13052:9;13048:18;13039:6;12995:72;:::i;:::-;13077;13145:2;13134:9;13130:18;13121:6;13077:72;:::i;:::-;12714:442;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract DEX is ReentrancyGuard {\n    /**\n     * @dev Tracking DEXToken exchange rate per ethereum.\n     */\n    uint256 public dexTokenExchangeRate = 10000;\n\n    /**\n     * @dev Tracking exchange fee and total fee collected.\n     */\n    uint256 public exchangeFee = 0.0002 ether;\n    uint256 private collectedFees;\n\n\n    /**\n     * @dev keep track of the owner who deployed the contract.\n     */\n    address immutable public owner;\n\n    /**\n     * @dev Modifiers to check the owner is msg.sender.\n     */\n    modifier OnlyOwner() {\n        require(msg.sender == owner, \"OnlyOwner: Only owner can access this function.\");\n        _;\n    }\n\n    /**\n     * @dev Modifiers to check whether collected fees is more than zero.\n     */\n    modifier CollectedFeesMoreThanZero() {\n        require(collectedFees > 0, \"CollectedFeesMoreThanZero: There is not collected fees.\");\n        _;\n    }\n\n    /**\n     * @dev Modifiers to check the owner sent the exchange fee.\n     */\n    modifier ExchangeFeeSent() {\n        require(msg.value >= exchangeFee, \"ExchangeFeeSent: Exchange fee is not sent.\");\n        _;\n    }\n\n    /**\n     * @dev Modifiers to check the value is more than zero.\n     */\n    modifier ValueMoreThanZero(uint256 _value) {\n        require(_value > 0, \"ValueMoreThanZero: Value should not be zero\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to check the DEXToken available or not.\n     * @param _dexTokenAddress: The contract address of DEXToken.\n     */\n    modifier DEXTokenAvailableInContract(address _dexTokenAddress){\n        uint256 contractBalance = IERC20(_dexTokenAddress).balanceOf(address(this));\n        uint256 tokenToSend = (msg.value - exchangeFee) * dexTokenExchangeRate;\n        require(contractBalance >= tokenToSend, \"DEXTokenAvailableInContract: DEX token is not available.\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to check the DEXToken available or not.\n     * @param _dexTokenAddress: The contract address of DEXToken.\n     */\n    modifier DEXTokenAvailableInSender(address _dexTokenAddress, uint256 _tokenAmount){\n        uint256 ownerBalance = IERC20(_dexTokenAddress).balanceOf(address(msg.sender));\n        require(_tokenAmount <= ownerBalance, \"DEXTokenAvailableInSender: DEX token is not available.\");\n        _;\n    }\n\n    /**\n     * @dev Event to keep track of swapped values.\n     * @param walletAddress: The address who swapped.\n     * @param ethValue: The ethereum value.\n     * @param dexValue: The DEX token value.\n     * @param toDex: Boolean value to check whether address swapped eth with dex\n     */\n    event TokenSwapped(\n        address indexed walletAddress,\n        uint256 indexed ethValue,\n        uint256 indexed dexValue,\n        bool toDex\n    );\n\n    /**\n     * @dev Assigning the contract deployer to owner.\n     */\n    constructor(){\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Function to update DEXToken exchange rate.\n     * @param _newRate: The new exchange rate of DEXToken.\n     */\n    function updateDexTokenExchangeRate(uint256 _newRate) external\n        ValueMoreThanZero(_newRate) OnlyOwner {\n        dexTokenExchangeRate = _newRate;\n    }\n\n    /**\n     * @dev Function to update exchange fee.\n     * @param _newFee: The new exchange fee.\n     */\n    function updateExchangeFee(uint256 _newFee) external OnlyOwner {\n        exchangeFee = _newFee;\n    }\n\n    /**\n     * @dev Function to withdraw fees which only accessable from owner account.\n     */\n    function withdrawFees() external\n        ValueMoreThanZero(collectedFees) OnlyOwner {\n        payable(owner).transfer(collectedFees);\n        collectedFees = 0;\n    }\n\n    /**\n     * @dev function to swap ether with DEX Token.\n     * @param _dexTokenContractAddress: The address of the DEXToken contract.\n     */\n    function swapETHWithDEXToken(address _dexTokenContractAddress)\n     external DEXTokenAvailableInContract(_dexTokenContractAddress) ExchangeFeeSent nonReentrant payable {\n        uint256 tokenToSend = (msg.value - exchangeFee) * dexTokenExchangeRate;\n        collectedFees += exchangeFee;\n        IERC20(_dexTokenContractAddress).transfer(msg.sender, tokenToSend);\n        emit TokenSwapped(msg.sender, msg.value - exchangeFee, tokenToSend, true);\n    }\n\n    /**\n     * @dev function to swap DEX with ETH.\n     * @param _dexTokenContractAddress: The address of the DEXToken contract.\n     * @param _tokenAmount: The DEX token amount want to sell.\n     */\n    function swapDEXTokenWithETH(address _dexTokenContractAddress, uint256 _tokenAmount)\n     external DEXTokenAvailableInSender(_dexTokenContractAddress, _tokenAmount)\n     ExchangeFeeSent nonReentrant payable {\n        uint256 ethToSend = (_tokenAmount / dexTokenExchangeRate) - exchangeFee;\n        collectedFees += exchangeFee;\n        IERC20(_dexTokenContractAddress).transferFrom(msg.sender, address(this), _tokenAmount);\n        payable(msg.sender).transfer(ethToSend);\n        emit TokenSwapped(msg.sender, ethToSend, _tokenAmount, false);\n    }\n}",
  "sourcePath": "/Volumes/Others/Web3Projects/decentralizeexchange/contracts/DEX.sol",
  "ast": {
    "absolutePath": "project:/contracts/DEX.sol",
    "exportedSymbols": {
      "DEX": [
        434
      ],
      "IERC20": [
        117
      ],
      "ReentrancyGuard": [
        39
      ]
    },
    "id": 435,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 119,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 120,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 435,
        "sourceUnit": 40,
        "src": "58:62:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 121,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 435,
        "sourceUnit": 118,
        "src": "121:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 122,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39,
              "src": "195:15:2"
            },
            "id": 123,
            "nodeType": "InheritanceSpecifier",
            "src": "195:15:2"
          }
        ],
        "canonicalName": "DEX",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 434,
        "linearizedBaseContracts": [
          434,
          39
        ],
        "name": "DEX",
        "nameLocation": "188:3:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 124,
              "nodeType": "StructuredDocumentation",
              "src": "217:69:2",
              "text": " @dev Tracking DEXToken exchange rate per ethereum."
            },
            "functionSelector": "367fd448",
            "id": 127,
            "mutability": "mutable",
            "name": "dexTokenExchangeRate",
            "nameLocation": "306:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 434,
            "src": "291:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 125,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "291:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 126,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "329:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 128,
              "nodeType": "StructuredDocumentation",
              "src": "341:70:2",
              "text": " @dev Tracking exchange fee and total fee collected."
            },
            "functionSelector": "2ecd3be4",
            "id": 131,
            "mutability": "mutable",
            "name": "exchangeFee",
            "nameLocation": "431:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 434,
            "src": "416:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 129,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "416:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e30303032",
              "id": 130,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "445:12:2",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000000000000_by_1",
                "typeString": "int_const 200000000000000"
              },
              "value": "0.0002"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 133,
            "mutability": "mutable",
            "name": "collectedFees",
            "nameLocation": "479:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 434,
            "src": "463:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 132,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "463:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 134,
              "nodeType": "StructuredDocumentation",
              "src": "500:74:2",
              "text": " @dev keep track of the owner who deployed the contract."
            },
            "functionSelector": "8da5cb5b",
            "id": 136,
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "604:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 434,
            "src": "579:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 135,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "579:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "709:107:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 140,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "727:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "727:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 142,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "741:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "727:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c794f776e65723a204f6e6c79206f776e65722063616e2061636365737320746869732066756e6374696f6e2e",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "748:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8",
                          "typeString": "literal_string \"OnlyOwner: Only owner can access this function.\""
                        },
                        "value": "OnlyOwner: Only owner can access this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aefe962efe9f8be5c4aa37513100cf59af504ab9ffa6c46be949b355715f36d8",
                          "typeString": "literal_string \"OnlyOwner: Only owner can access this function.\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "719:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:79:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "719:79:2"
                },
                {
                  "id": 147,
                  "nodeType": "PlaceholderStatement",
                  "src": "808:1:2"
                }
              ]
            },
            "documentation": {
              "id": 137,
              "nodeType": "StructuredDocumentation",
              "src": "616:67:2",
              "text": " @dev Modifiers to check the owner is msg.sender."
            },
            "id": 149,
            "name": "OnlyOwner",
            "nameLocation": "697:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "706:2:2"
            },
            "src": "688:128:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "948:113:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 153,
                          "name": "collectedFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "966:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "982:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "966:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6c6c6563746564466565734d6f72655468616e5a65726f3a205468657265206973206e6f7420636f6c6c656374656420666565732e",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "985:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_133bd411a49fd11f6fcf97ebb44c87066b8c97ee49cb2bd6323873e99e57c12d",
                          "typeString": "literal_string \"CollectedFeesMoreThanZero: There is not collected fees.\""
                        },
                        "value": "CollectedFeesMoreThanZero: There is not collected fees."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_133bd411a49fd11f6fcf97ebb44c87066b8c97ee49cb2bd6323873e99e57c12d",
                          "typeString": "literal_string \"CollectedFeesMoreThanZero: There is not collected fees.\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "958:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "958:85:2"
                },
                {
                  "id": 159,
                  "nodeType": "PlaceholderStatement",
                  "src": "1053:1:2"
                }
              ]
            },
            "documentation": {
              "id": 150,
              "nodeType": "StructuredDocumentation",
              "src": "822:84:2",
              "text": " @dev Modifiers to check whether collected fees is more than zero."
            },
            "id": 161,
            "name": "CollectedFeesMoreThanZero",
            "nameLocation": "920:25:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "945:2:2"
            },
            "src": "911:150:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "1174:107:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 165,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1192:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1192:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 167,
                          "name": "exchangeFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "1205:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1192:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e676546656553656e743a2045786368616e676520666565206973206e6f742073656e742e",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb",
                          "typeString": "literal_string \"ExchangeFeeSent: Exchange fee is not sent.\""
                        },
                        "value": "ExchangeFeeSent: Exchange fee is not sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95664af97b7eb88f32b7fc341ea8a8e2823a79e22d6bc8dd8ab17c8fec4b71fb",
                          "typeString": "literal_string \"ExchangeFeeSent: Exchange fee is not sent.\""
                        }
                      ],
                      "id": 164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1184:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1184:79:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:79:2"
                },
                {
                  "id": 172,
                  "nodeType": "PlaceholderStatement",
                  "src": "1273:1:2"
                }
              ]
            },
            "documentation": {
              "id": 162,
              "nodeType": "StructuredDocumentation",
              "src": "1067:75:2",
              "text": " @dev Modifiers to check the owner sent the exchange fee."
            },
            "id": 174,
            "name": "ExchangeFeeSent",
            "nameLocation": "1156:15:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:2:2"
            },
            "src": "1147:134:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "1406:94:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 180,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 177,
                          "src": "1424:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1433:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1424:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c75654d6f72655468616e5a65726f3a2056616c75652073686f756c64206e6f74206265207a65726f",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1436:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41",
                          "typeString": "literal_string \"ValueMoreThanZero: Value should not be zero\""
                        },
                        "value": "ValueMoreThanZero: Value should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a079f6de60c4b9ce56d6d576c984b2c00c6107869ce4a1183fe289c104226a41",
                          "typeString": "literal_string \"ValueMoreThanZero: Value should not be zero\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1416:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:66:2"
                },
                {
                  "id": 186,
                  "nodeType": "PlaceholderStatement",
                  "src": "1492:1:2"
                }
              ]
            },
            "documentation": {
              "id": 175,
              "nodeType": "StructuredDocumentation",
              "src": "1287:71:2",
              "text": " @dev Modifiers to check the value is more than zero."
            },
            "id": 188,
            "name": "ValueMoreThanZero",
            "nameLocation": "1372:17:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1398:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1390:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1389:16:2"
            },
            "src": "1363:137:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "1711:292:2",
              "statements": [
                {
                  "assignments": [
                    194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 194,
                      "mutability": "mutable",
                      "name": "contractBalance",
                      "nameLocation": "1729:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "1721:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 193,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1721:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 204,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 201,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1790:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$434",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$434",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1782:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 199,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1782:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 196,
                            "name": "_dexTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "1754:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 195,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1747:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1747:24:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "1747:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1721:75:2"
                },
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "tokenToSend",
                      "nameLocation": "1814:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "1806:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1806:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 214,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 207,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1829:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1829:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 209,
                            "name": "exchangeFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "1841:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1829:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 211,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1828:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 212,
                      "name": "dexTokenExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "1856:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1828:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1806:70:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 216,
                          "name": "contractBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "1894:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 217,
                          "name": "tokenToSend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "1913:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1894:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444558546f6b656e417661696c61626c65496e436f6e74726163743a2044455820746f6b656e206973206e6f7420617661696c61626c652e",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1926:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c",
                          "typeString": "literal_string \"DEXTokenAvailableInContract: DEX token is not available.\""
                        },
                        "value": "DEXTokenAvailableInContract: DEX token is not available."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c0cfed3af7338384fcf14fee8e3fc27292acfa32b26eed0daf7c5da458b6e6c",
                          "typeString": "literal_string \"DEXTokenAvailableInContract: DEX token is not available.\""
                        }
                      ],
                      "id": 215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1886:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1886:99:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "1886:99:2"
                },
                {
                  "id": 222,
                  "nodeType": "PlaceholderStatement",
                  "src": "1995:1:2"
                }
              ]
            },
            "documentation": {
              "id": 189,
              "nodeType": "StructuredDocumentation",
              "src": "1506:138:2",
              "text": " @dev Modifier to check the DEXToken available or not.\n @param _dexTokenAddress: The contract address of DEXToken."
            },
            "id": 224,
            "name": "DEXTokenAvailableInContract",
            "nameLocation": "1658:27:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_dexTokenAddress",
                  "nameLocation": "1694:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "1686:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1685:26:2"
            },
            "src": "1649:354:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "2234:211:2",
              "statements": [
                {
                  "assignments": [
                    232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 232,
                      "mutability": "mutable",
                      "name": "ownerBalance",
                      "nameLocation": "2252:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 252,
                      "src": "2244:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 231,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2244:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 239,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2310:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2310:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2302:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 237,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2302:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2302:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 234,
                            "name": "_dexTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "2274:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 233,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2267:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2267:24:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2267:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2267:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2244:78:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 245,
                          "name": "_tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "2340:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 246,
                          "name": "ownerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "2356:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2340:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444558546f6b656e417661696c61626c65496e53656e6465723a2044455820746f6b656e206973206e6f7420617661696c61626c652e",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2370:56:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d",
                          "typeString": "literal_string \"DEXTokenAvailableInSender: DEX token is not available.\""
                        },
                        "value": "DEXTokenAvailableInSender: DEX token is not available."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50d9b564a78da3fdff32e4624137bc469bcaaf8cabbbf564cd4be4acb889073d",
                          "typeString": "literal_string \"DEXTokenAvailableInSender: DEX token is not available.\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2332:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:95:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:95:2"
                },
                {
                  "id": 251,
                  "nodeType": "PlaceholderStatement",
                  "src": "2437:1:2"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "2009:138:2",
              "text": " @dev Modifier to check the DEXToken available or not.\n @param _dexTokenAddress: The contract address of DEXToken."
            },
            "id": 253,
            "name": "DEXTokenAvailableInSender",
            "nameLocation": "2161:25:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "_dexTokenAddress",
                  "nameLocation": "2195:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "2187:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "_tokenAmount",
                  "nameLocation": "2221:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "2213:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2186:48:2"
            },
            "src": "2152:293:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 254,
              "nodeType": "StructuredDocumentation",
              "src": "2451:286:2",
              "text": " @dev Event to keep track of swapped values.\n @param walletAddress: The address who swapped.\n @param ethValue: The ethereum value.\n @param dexValue: The DEX token value.\n @param toDex: Boolean value to check whether address swapped eth with dex"
            },
            "eventSelector": "998db19d1e1862382f8a2644e3c399121b4ec6dcae1a42dd4034c30fca3fe32b",
            "id": 264,
            "name": "TokenSwapped",
            "nameLocation": "2748:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "walletAddress",
                  "nameLocation": "2786:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "2770:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2770:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "ethValue",
                  "nameLocation": "2825:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "2809:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2809:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "dexValue",
                  "nameLocation": "2859:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "2843:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2843:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toDex",
                  "nameLocation": "2882:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "2877:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2760:133:2"
            },
            "src": "2742:152:2"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "2983:35:2",
              "statements": [
                {
                  "expression": {
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 268,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "2993:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 269,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3001:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3001:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2993:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "2993:18:2"
                }
              ]
            },
            "documentation": {
              "id": 265,
              "nodeType": "StructuredDocumentation",
              "src": "2900:65:2",
              "text": " @dev Assigning the contract deployer to owner."
            },
            "id": 274,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2981:2:2"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2983:0:2"
            },
            "scope": 434,
            "src": "2970:48:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "3263:48:2",
              "statements": [
                {
                  "expression": {
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 285,
                      "name": "dexTokenExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "3273:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 286,
                      "name": "_newRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "3296:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3273:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "3273:31:2"
                }
              ]
            },
            "documentation": {
              "id": 275,
              "nodeType": "StructuredDocumentation",
              "src": "3024:125:2",
              "text": " @dev Function to update DEXToken exchange rate.\n @param _newRate: The new exchange rate of DEXToken."
            },
            "functionSelector": "350d91fd",
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 280,
                    "name": "_newRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 277,
                    "src": "3243:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 279,
                  "name": "ValueMoreThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 188,
                  "src": "3225:17:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3225:27:2"
              },
              {
                "id": 283,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 282,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 149,
                  "src": "3253:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3253:9:2"
              }
            ],
            "name": "updateDexTokenExchangeRate",
            "nameLocation": "3163:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_newRate",
                  "nameLocation": "3198:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "3190:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3189:18:2"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3263:0:2"
            },
            "scope": 434,
            "src": "3154:157:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "3486:38:2",
              "statements": [
                {
                  "expression": {
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 298,
                      "name": "exchangeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "3496:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 299,
                      "name": "_newFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "3510:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3496:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:21:2"
                }
              ]
            },
            "documentation": {
              "id": 291,
              "nodeType": "StructuredDocumentation",
              "src": "3317:101:2",
              "text": " @dev Function to update exchange fee.\n @param _newFee: The new exchange fee."
            },
            "functionSelector": "9b9cf7de",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 296,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 295,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 149,
                  "src": "3476:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3476:9:2"
              }
            ],
            "name": "updateExchangeFee",
            "nameLocation": "3432:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "_newFee",
                  "nameLocation": "3458:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3450:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3449:17:2"
            },
            "returnParameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3486:0:2"
            },
            "scope": 434,
            "src": "3423:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "3710:82:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 317,
                        "name": "collectedFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "3744:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 314,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 136,
                            "src": "3728:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3720:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3720:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3720:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3720:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3720:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "3720:38:2"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 320,
                      "name": "collectedFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "3768:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3784:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3768:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3768:17:2"
                }
              ]
            },
            "documentation": {
              "id": 304,
              "nodeType": "StructuredDocumentation",
              "src": "3530:91:2",
              "text": " @dev Function to withdraw fees which only accessable from owner account."
            },
            "functionSelector": "476343ee",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 307,
                    "name": "collectedFees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 133,
                    "src": "3685:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 308,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 306,
                  "name": "ValueMoreThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 188,
                  "src": "3667:17:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3667:32:2"
              },
              {
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 309,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 149,
                  "src": "3700:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3700:9:2"
              }
            ],
            "name": "withdrawFees",
            "nameLocation": "3635:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3647:2:2"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3710:0:2"
            },
            "scope": 434,
            "src": "3626:166:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "4111:284:2",
              "statements": [
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "mutability": "mutable",
                      "name": "tokenToSend",
                      "nameLocation": "4129:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "4121:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4121:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 340,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4144:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "4144:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 342,
                            "name": "exchangeFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "4156:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4144:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 344,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4143:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 345,
                      "name": "dexTokenExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "4171:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4143:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4121:70:2"
                },
                {
                  "expression": {
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 348,
                      "name": "collectedFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "4201:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 349,
                      "name": "exchangeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "4218:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4201:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 356,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4281:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4281:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 358,
                        "name": "tokenToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "4293:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 353,
                            "name": "_dexTokenContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "4246:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 352,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "4239:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4239:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "4239:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4239:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "4239:66:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 362,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4333:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4333:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 364,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4345:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4345:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 366,
                          "name": "exchangeFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "4357:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4345:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 368,
                        "name": "tokenToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "4370:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4383:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 361,
                      "name": "TokenSwapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "4320:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bool)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4320:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "EmitStatement",
                  "src": "4315:73:2"
                }
              ]
            },
            "documentation": {
              "id": 326,
              "nodeType": "StructuredDocumentation",
              "src": "3798:140:2",
              "text": " @dev function to swap ether with DEX Token.\n @param _dexTokenContractAddress: The address of the DEXToken contract."
            },
            "functionSelector": "3e6f03f8",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 331,
                    "name": "_dexTokenContractAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 328,
                    "src": "4048:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 332,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 330,
                  "name": "DEXTokenAvailableInContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 224,
                  "src": "4020:27:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4020:53:2"
              },
              {
                "id": 334,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 333,
                  "name": "ExchangeFeeSent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 174,
                  "src": "4074:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4074:15:2"
              },
              {
                "id": 336,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 335,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38,
                  "src": "4090:12:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4090:12:2"
              }
            ],
            "name": "swapETHWithDEXToken",
            "nameLocation": "3952:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "_dexTokenContractAddress",
                  "nameLocation": "3980:24:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "3972:32:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3972:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3971:34:2"
            },
            "returnParameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4111:0:2"
            },
            "scope": 434,
            "src": "3943:452:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "4808:342:2",
              "statements": [
                {
                  "assignments": [
                    390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 390,
                      "mutability": "mutable",
                      "name": "ethToSend",
                      "nameLocation": "4826:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "4818:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 389,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4818:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 397,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 391,
                            "name": "_tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "4839:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 392,
                            "name": "dexTokenExchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "4854:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4839:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 394,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4838:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 395,
                      "name": "exchangeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "4878:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4838:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4818:71:2"
                },
                {
                  "expression": {
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 398,
                      "name": "collectedFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "4899:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 399,
                      "name": "exchangeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "4916:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4899:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "4899:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 406,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4983:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4983:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 410,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5003:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$434",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$434",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4995:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 408,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4995:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4995:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 412,
                        "name": "_tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "5010:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 403,
                            "name": "_dexTokenContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "4944:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 402,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "4937:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4937:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116,
                      "src": "4937:45:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4937:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "4937:86:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 421,
                        "name": "ethToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "5062:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 417,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5041:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5041:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5033:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 415,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5033:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5033:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5033:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5033:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "5033:39:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 425,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5100:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5100:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 427,
                        "name": "ethToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "5112:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 428,
                        "name": "_tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "5123:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5137:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 424,
                      "name": "TokenSwapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "5087:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bool)"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5087:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "EmitStatement",
                  "src": "5082:61:2"
                }
              ]
            },
            "documentation": {
              "id": 374,
              "nodeType": "StructuredDocumentation",
              "src": "4401:195:2",
              "text": " @dev function to swap DEX with ETH.\n @param _dexTokenContractAddress: The address of the DEXToken contract.\n @param _tokenAmount: The DEX token amount want to sell."
            },
            "functionSelector": "8abbd3a9",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 381,
                    "name": "_dexTokenContractAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 376,
                    "src": "4726:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 382,
                    "name": "_tokenAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "4752:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 383,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 380,
                  "name": "DEXTokenAvailableInSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 253,
                  "src": "4700:25:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4700:65:2"
              },
              {
                "id": 385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 384,
                  "name": "ExchangeFeeSent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 174,
                  "src": "4771:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4771:15:2"
              },
              {
                "id": 387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 386,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38,
                  "src": "4787:12:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4787:12:2"
              }
            ],
            "name": "swapDEXTokenWithETH",
            "nameLocation": "4610:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "_dexTokenContractAddress",
                  "nameLocation": "4638:24:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4630:32:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4630:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_tokenAmount",
                  "nameLocation": "4672:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4664:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4664:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4629:56:2"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4808:0:2"
            },
            "scope": 434,
            "src": "4601:549:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 435,
        "src": "179:4973:2",
        "usedErrors": []
      }
    ],
    "src": "32:5120:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xA2Df7C45db1377BB95e31BbA2F56729493422A7e",
      "transactionHash": "0x0ab297ea921693127ca8aae001fc7b4b36969bfe3cbdb28631f7e849fd7ab4cf"
    },
    "80001": {
      "events": {
        "0x998db19d1e1862382f8a2644e3c399121b4ec6dcae1a42dd4034c30fca3fe32b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "ethValue",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "dexValue",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "toDex",
              "type": "bool"
            }
          ],
          "name": "TokenSwapped",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x87FB7f3e7229c2035Cb0ebD3e06927c4235a5bd7",
      "transactionHash": "0xc11a5e58add1ad3c21bd8fa540ac7e56e944b34493546046b230e412bc5b5985"
    },
    "1661268907870": {
      "events": {},
      "links": {},
      "address": "0xFd15614B9fA0FA5f1fbB54bF8B8de682cD6c7665",
      "transactionHash": "0x0459b574151c688d2e9036ecf2ff0bec8ef7cc9482d6dc23f37e4b75266c4051"
    },
    "1661431637369": {
      "events": {},
      "links": {},
      "address": "0x3D4f93DF3C3FA1C974744EcF093713E1C6bda37e",
      "transactionHash": "0xb8f7cfdd65a3c53674f79f06e35da98662eb1a7b928590436b7c2a145a08897b"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-25T17:49:54.591Z",
  "networkType": "ethereum",
  "devdoc": {
    "events": {
      "TokenSwapped(address,uint256,uint256,bool)": {
        "details": "Event to keep track of swapped values.",
        "params": {
          "dexValue": ": The DEX token value.",
          "ethValue": ": The ethereum value.",
          "toDex": ": Boolean value to check whether address swapped eth with dex",
          "walletAddress": ": The address who swapped."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Assigning the contract deployer to owner."
      },
      "swapDEXTokenWithETH(address,uint256)": {
        "details": "function to swap DEX with ETH.",
        "params": {
          "_dexTokenContractAddress": ": The address of the DEXToken contract.",
          "_tokenAmount": ": The DEX token amount want to sell."
        }
      },
      "swapETHWithDEXToken(address)": {
        "details": "function to swap ether with DEX Token.",
        "params": {
          "_dexTokenContractAddress": ": The address of the DEXToken contract."
        }
      },
      "updateDexTokenExchangeRate(uint256)": {
        "details": "Function to update DEXToken exchange rate.",
        "params": {
          "_newRate": ": The new exchange rate of DEXToken."
        }
      },
      "updateExchangeFee(uint256)": {
        "details": "Function to update exchange fee.",
        "params": {
          "_newFee": ": The new exchange fee."
        }
      },
      "withdrawFees()": {
        "details": "Function to withdraw fees which only accessable from owner account."
      }
    },
    "stateVariables": {
      "dexTokenExchangeRate": {
        "details": "Tracking DEXToken exchange rate per ethereum."
      },
      "exchangeFee": {
        "details": "Tracking exchange fee and total fee collected."
      },
      "owner": {
        "details": "keep track of the owner who deployed the contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}